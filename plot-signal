#!/usr/bin/python3
import argparse
import os

import matplotlib.pyplot as plt
import numpy as np
import scipy.signal

import lib.tekdecode

parser = argparse.ArgumentParser(
    description='generates time-domain plots from oscilloscope data')
parser.add_argument('file',
                    help='csv/isf files from Tektronix scope', nargs='+')
parser.add_argument('--downsample', type=int, default=100,
                    help='number of samples to skip')
parser.add_argument('--size', metavar=['width', 'height'], type=float, nargs=2,
                    help='plot size (mm)')
parser.add_argument('--factor',
                    help='constant factor (evaled and multiplied)')
parser.add_argument('--output',
                    help='output file name')

args = parser.parse_args()

fig, ax = plt.subplots(
    constrained_layout=True, figsize=tuple((s / 25.4 for s in args.size)) if args.size else None)

for file in args.file:

	voltage, sample_rate, length = lib.tekdecode.loadFile(file)

	voltage = voltage[::args.downsample]

	time = np.arange(0, len(voltage)) * (args.downsample / sample_rate)

	voltage *= 1e3

	if args.factor:
		voltage *= eval(args.factor)

	ax.plot(time, voltage, lw=0.1)

ax.set_ylabel('Spannung (mV)')
ax.set_xlabel('Zeit (s)')
ax.grid(which='both')

if args.output:
	plt.savefig(args.output)
else:
	plt.show()
